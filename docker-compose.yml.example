version: '3.3'

volumes:
  postgres_db:

services:

  redis:
    image: redis:alpine
    expose:
      - 6379
    networks:
      blog:

  postgres:
    image: postgres:alpine
    env_file:
      - env-blogserver
    volumes:
      - postgres_db:/var/lib/postgresql/data
    restart: always
    ports:
      - 5432:5432
    networks:
      blog:

  web:
    image: lelikov/propitanie:latest
    restart: always
    env_file:
      - env-blogserver
    environment:
      - DEBUG=
    command:
      bash -c "python manage.py migrate && python manage.py collectstatic --no-input && gunicorn --workers 3 --timeout 60  config.wsgi --bind :8000 & celery -A config worker -l info & celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./cache:/usr/src/propitanie/cache
      - ./staticfiles:/usr/src/propitanie/staticfiles
      - ./log:/usr/src/propitanie/log
    expose:
      - 8000
    networks:
      blog:

  nginx:
    image: nginx
    restart: always
    environment:
      - SERVER_NAME=
    depends_on:
      - web
    volumes:
      - ./staticfiles:/usr/src/propitanie/staticfiles
      - ./nginx/mysite.template:/etc/nginx/conf.d/mysite.template
      - /etc/ssl/propitanie.blog:/etc/ssl/propitanie.blog:ro
    command: bash -c "envsubst '$${SERVER_NAME}' < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    ports:
      - 80:80
      - 443:443
    networks:
      blog:

networks:
  blog:
    external:
      name: blog_network
